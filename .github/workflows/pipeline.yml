name: Build and Deploy Lambda

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGION_DEFAULT: us-east-1
  SONAR_PROJECT_KEY: marceloebert_FrameSnap-Lambda-Video-Processor
  SONAR_ORGANIZATION: marceloebert
  SONAR_HOST_URL: https://sonarcloud.io

jobs:
  build-and-analyze:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dependencies
        run: dotnet restore Lambda-FrameSnap-Processor.sln

      - name: Run Unit Tests with Coverage
        shell: powershell
        run: |
          dotnet test Lambda-FrameSnap-Processor.Tests/Lambda-FrameSnap-Processor.Tests.csproj `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=./coverage/coverage.opencover.xml `
            /p:Include="[Lambda-FrameSnap-Processor]*" `
            --verbosity normal

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"${{ env.SONAR_PROJECT_KEY }}" `
            /o:"${{ env.SONAR_ORGANIZATION }}" `
            /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.opencover.reportsPaths="coverage/coverage.opencover.xml" `
            /d:sonar.coverage.exclusions="**Tests*.cs" `
            /d:sonar.verbose=true
          
          dotnet build Lambda-FrameSnap-Processor.sln --configuration Release --no-restore
          
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  build-and-package:
    runs-on: windows-latest
    needs: build-and-analyze
    environment:
      name: AWS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install Amazon Lambda Tools
        shell: powershell
        run: |
          dotnet tool install -g Amazon.Lambda.Tools
          $env:PATH += ";$HOME/.dotnet/tools"

      - name: Build and package Lambda
        shell: powershell
        run: |
          dotnet restore
          dotnet lambda package -pl . -c Release -o Lambda-FrameSnap-Processor.zip

      - name: Upload Lambda package
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: Lambda-FrameSnap-Processor.zip

  deploy:
    runs-on: windows-latest
    needs: build-and-package
    environment:
      name: AWS
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Download Lambda package
        uses: actions/download-artifact@v4
        with:
          name: lambda-package

      - name: Deploy Lambda to AWS
        shell: powershell
        run: |
          aws lambda update-function-code `
            --region us-east-1 `
            --function-name Lambda-FrameSnap-Processor `
            --zip-file fileb://Lambda-FrameSnap-Processor.zip
